#STEP1: 
	creating a venv 
	
step2: activate and install modules.

step3: project structure
		app-floder
			- templates
			- dbModules
			- app.py or appplication.py or index.py
			- requirements.txt
			
step4: TO RUN 
		python app.py
		
		


request.data Contains the incoming request data as string in case it came with a mimetype Flask does not handle.

request.args: the key/value pairs in the URL query string
request.form: the key/value pairs in the body, from a HTML post form, or JavaScript request that isn't JSON encoded
request.files: the files in the body, which Flask keeps separate from form. HTML forms must use enctype=multipart/form-data or files will not be uploaded.
request.values: combined args and form, preferring args if keys overlap
request.json: parsed JSON data. The request must have the application/json content type, or use request.get_json(force=True) to ignore the content type.
All of these are MultiDict instances (except for json). You can access values using:

request.form['name']: use indexing if you know the key exists
request.form.get('name'): use get if the key might not exist
request.form.getlist('name'): use getlist if the key is sent multiple times and you want a list of values. get only returns the first value.





For URL query parameters, use request.args.

search = request.args.get("search")
page = request.args.get("page")




For URL query parameters, use request.args.

search = request.args.get("search")
page = request.args.get("page")
For posted form input, use request.form.

email = request.form.get('email')
password = request.form.get('password')



For JSON posted with content type application/json, use request.get_json().

data = request.get_json()